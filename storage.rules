rules_version = '2';

// Craft rules based on data in your Firestore database
// allow write: if firestore.get(
//    /databases/(default)/documents/users/$(request.auth.uid)).data.isAdmin;
service firebase.storage {
  match /b/{bucket}/o {
    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }

    // Videos folder
    match /videos/{userId}/{videoId=**} {
      // Allow read access to all videos
      allow read: if true;
      
      // Allow upload only by authenticated users to their own folder
      allow write: if isOwner(userId) && 
        // Limit file size to 100MB
        request.resource.size <= 100 * 1024 * 1024 &&
        // Only allow video files
        request.resource.contentType.matches('video/.*');
    }

    // Thumbnails folder
    match /thumbnails/{userId}/{thumbnailId=**} {
      // Allow read access to all thumbnails
      allow read: if true;
      
      // Allow upload only by authenticated users to their own folder
      allow write: if isOwner(userId) && 
        // Limit file size to 5MB
        request.resource.size <= 5 * 1024 * 1024 &&
        // Only allow image files
        request.resource.contentType.matches('image/.*');
    }

    // User profile images
    match /profile_images/{userId} {
      allow read: if true;
      allow write: if isOwner(userId) && 
        request.resource.size <= 5 * 1024 * 1024 &&
        request.resource.contentType.matches('image/.*');
    }

    // Default deny
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}
